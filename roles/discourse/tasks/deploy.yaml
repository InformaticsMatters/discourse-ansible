---

- name: Check key configuration
  assert:
    that:
    - d_namespace|string != 'SetMe'
    - d_hostname|string != 'SetMe'
    - d_password|string != 'SetMe'
    - d_email|string != 'SetMe'
    - d_pg_root_password|string != 'SetMe'
    - d_redis_password|string != 'SetMe'

- name: Check smtp configuration
  assert:
    that:
    - d_smtp_user|string != 'SetMe'
    - d_smtp_password|string != 'SetMe'
  when: d_smtp_host|string != 'SetMe'

# Create the namespace and other basic materials

- name: Create namespace ({{ d_namespace }})
  k8s:
    definition: "{{ lookup('template', 'namespace.yaml.j2') }}"
    wait: yes

- name: Create DockerHub image pull secret
  k8s:
    definition: "{{ lookup('template', 'secret-dh-imagepull.yaml.j2') }}"
    wait: yes
  vars:
    pull_namespace: "{{ d_namespace }}"
    pull_secret: "{{ d_dockerhub_pullsecret }}"
  when: d_dockerhub_pullsecret|string|length > 0

- name: Create namespace material
  k8s:
    definition: "{{ lookup('template', '{{ item }}.yaml.j2') }}"
    wait: yes
  loop:
  - serviceaccount
  - role
  - rolebinding-d-sa

- name: Relax {{ d_namespace }} 'default' service account (for cert-manager)
  k8s:
    definition: "{{ lookup('template', 'rolebinding-default-sa.yaml.j2') }}"
    wait: yes

# Volumes

- name: Get {{ d_vol_storageclass }} StorageClass
  k8s_info:
    kind: StorageClass
    name: "{{ d_vol_storageclass }}"
  register: sc_result
  when: d_vol_storageclass != " "

- name: Assert {{ d_vol_storageclass }} StorageClass
  assert:
    that: sc_result.resources|length == 1
    fail_msg: The {{ d_vol_storageclass }} StorageClass must be available on the cluster
  when: d_vol_storageclass != " "

- name: Create volume claims
  k8s:
    definition: "{{ lookup('template', '{{ item }}.yaml.j2') }}"
    wait: yes
    wait_timeout: "{{ wait_timeout }}"
  loop:
  - pvc-postgres
  - pvc-redis
  - pvc-discourse
  - pvc-discourse-sidekiq

# Deploy the application

- name: Deploy Discourse ({{ d_hostname }})
  k8s:
    definition: "{{ lookup('template', '{{ item }}.yaml.j2') }}"
    wait: yes
    wait_timeout: "{{ pod_ready_timeout }}"
  loop:
  - statefulset-postgres
  - service-postgres
  - statefulset-redis
  - service-redis
  - statefulset-discourse
  - service-discourse
  - ingress
